@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@model SwiftBlog.Web.Models.ViewModels.BlogDetailsViewModel
@{
	ViewData["Title"] = (Model != null) ? Model.PageTitle : "Post not found";
}


<div class="container my-5">
	<div class="row justify-content-center">
		<div class="col-12 col-lg-6">

			@if (Model != null)
			{
				<h1 class="mb-3">@Model.Heading</h1>

				<div class="mb-3 d-flex justify-content-between ">
					<span class="text-secondary">@Model.Author</span>
					<span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
				</div>

				<div class="mb-3 d-flex">
					@foreach (var tag in Model.Tags)
					{
						<span class="badge me-1" style="background-color: @tag.Color; color: black; border: 1px solid #e3e3e3">@tag.DisplayName</span>
					}
				</div>

				<img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3 rounded-2" style="box-shadow: 0.3rem 0.3rem #808080, -0.3rem -0.3rem #ccc; width: 100%" />

				<div class="mb-3 blog-content">
					@Html.Raw(Model.Content)
				</div>

				@if (signInManager.IsSignedIn(User))
				{
					<div class="mb-3 d-flex justify-content-center">
						<button class="btn like-button d-flex align-items-center gap-2" style="cursor: pointer; width: 60px; color: indianred; background-color: #eee" disabled>
							<i class="bx bxs-heart bx-xs"></i>
							<span class="like-num">@Model.TotalLikes</span>
						</button>
					</div>
				}

				<div class="my-4 d-flex justify-content-center">
					<i class="bx bx-dots-horizontal-rounded bx-md" style="color: #ccc"></i>
				</div>

				<div class="card">
					<div class="card-header py-3">

						<h4 class="d-flex align-items-center gap-3">
							<span>Comments</span>
							<i class="bx bxs-down-arrow bx-xs"></i>
						</h4>

						<div class="card-body">
							@if (Model.Comments != null && Model.Comments.Any())
							{
								@foreach(var comment in Model.Comments) 
								{
									<div class="card mb-3">
										<div class="card-body">
											<div>
												@comment.Description
											</div>
											<div class="d-flex justify-content-between">
												<span class="text-secondary">@comment.Username</span>
												<span class="text-secondary">@comment.DateAdded.ToString("MM/dd/yy H:mm")</span>
											</div>
										</div>
									</div> 
								}
							} else
							{
								<p class="mb-3">No comments yet!</p>
							}
						</div>

						@if (signInManager.IsSignedIn(User))
						{
							<h4 class="d-flex align-items-center gap-3">
								<span>Tell us what you thought</span>
								<i class="bx bxs-down-arrow bx-xs"></i>
							</h4>

							<div class="card my-4">
								<div class="card-body pt-4">
									<form method="post">
										<div class="mb-3">
											<input type="text" class="form-control required" asp-for="CommentDescription" autocomplete="off" placeholder="Type a comment..." />
										</div>

										<div class="mb-3">
											<button type="submit" class="btn btn-dark">Submit</button>
											<input type="hidden" asp-for="Id" />
											<input type="hidden" asp-for="UrlHandle" />
										</div>
									</form>
								</div>
							</div>
						}
					</div>
				</div>

				
			} 
			else 
			{
				<p>Post not found... Did something go wrong?</p>
			}

		</div>
	</div>
</div>

@section Scripts {
	<script type="module" src="~/js/disableButton.js" asp-append-version="true"></script>
	<script>
		async function disableButton() {
			$('.like-button').prop('disabled', true);
			$('.like-button').css('transition-property', 'all');
			$('.like-button').css('transition', '0.5s');
			$('.like-button').css('background-color', '#eee');
			$('.like-button').css('color', 'indianred');
		}

		async function enableButton() {
			$('.like-button').prop('disabled', false);
			$('.like-button').css('background-color', 'indianred');
			$('.like-button').css('color', '#eee');
		}

		async function getTotalLikes() {
			fetch('/api/BlogPostLike/@Model.Id/totalLikes', {
				method: 'GET',
				headers: {
					'Content-Type': 'application/json',
					'Accept': '*/*'
				}
			}).then(data => data.json())
			.then(result => {
				$('.like-num').text(result);
			});
		}

		async function addLikeToBlog() {
			fetch('/api/BlogPostLike/Add', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
					'Accept': '*/*',
				},
				body: JSON.stringify({
					blogPostId: '@Model.Id',
					userId: '@userManager.GetUserId(User)'
				})
			}).then(() => {
				getTotalLikes();
				disableButton();
			});
		}

		$(document).ready(() => {
			$('.like-button').click(addLikeToBlog);
			'@Model.Liked' == 'True' ? disableButton() : enableButton();
			getTotalLikes();
		});
	</script>
}